{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kkurt\\\\Desktop\\\\projects\\\\react-complete-guide\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAEmC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAF7D;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAHlC;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQN,a;;AAsDT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient, ObjectId} from \"mongodb\";\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title} address={props.meetupData.address}\r\n            description={props.meetupData.description}/>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://john_wick:johnwicksdogs@cluster0.bh91r.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://john_wick:johnwicksdogs@cluster0.bh91r.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}