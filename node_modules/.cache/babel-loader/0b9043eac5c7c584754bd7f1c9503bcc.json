{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemToCart","filter","cartActions","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE,CAFL;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAG,CAACQ,YAAJ,EAAkB;AACdJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AAACC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EAAjB;AAAqBG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAApC;AAA2CC,UAAAA,QAAQ,EAAE,CAArD;AAAwDC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAA5E;AAAmFjB,UAAAA,IAAI,EAAES,OAAO,CAACW;AAAjG,SAAjB;AACH,OAFD,MAEO;AACHT,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BV,OAAO,CAACQ,KAA5D;AACH;AACJ,KAXK;;AAYNI,IAAAA,gBAAgB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAIQ,YAAY,CAACO,QAAb,KAA0B,CAA9B,EAAiC;AAC7BX,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACM,KAAjE;AACH;AACJ;;AAtBK;AAPgB,CAAD,CAA7B;AAiCA,OAAO,MAAMM,WAAW,GAAGxB,SAAS,CAACyB,OAA9B;AACP,eAAezB,SAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        totalAmount: 0,\r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            if(!existingItem) {\r\n                state.items.push({itemId: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name: newItem.title});\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemToCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}