{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-a0360-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    })));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-a0360-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sent cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,SAAQC,WAAR,QAA0B,cAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAA5B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACH,KARD;;AASA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwB;AAC7BC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,IAAkB,EADI;AAE7BC,QAAAA,aAAa,EAAEH,QAAQ,CAACG;AAFK,OAAxB,CAAD,CAAR;AAKH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CACL;AACIC,QAAAA,MAAM,EAAE,OADZ;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,OAAO,EAAE;AAHb,OADK,CAAD,CAAR;AAMH;AACJ,GAzBD;AA0BH,CA3BM;AA6BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOlB,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CACJA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CACL;AACIC,MAAAA,MAAM,EAAE,SADZ;AAEIC,MAAAA,KAAK,EAAE,YAFX;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADK,CAAD,CADJ,CAAR;;AASA,UAAMG,WAAW,GAAG,YAAY;AAC5B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,EACxB;AAACiB,QAAAA,MAAM,EAAE,KAAT;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KADK;AAEjBC,UAAAA,aAAa,EAAEO,IAAI,CAACP;AAFH,SAAf;AADN,OADwB,CAA5B;;AAOA,UAAG,CAACT,QAAQ,CAACE,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;AACJ,KAXD;;AAaA,QAAI;AACA,YAAMc,WAAW,EAAjB;AAGAnB,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CACL;AACIC,QAAAA,MAAM,EAAE,SADZ;AAEIC,QAAAA,KAAK,EAAE,YAFX;AAGIC,QAAAA,OAAO,EAAE;AAHb,OADK,CAAD,CAAR;AAOH,KAXD,CAWE,OAAOJ,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CACL;AACIC,QAAAA,MAAM,EAAE,OADZ;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,OAAO,EAAE;AAHb,OADK,CAAD,CAAR;AAMH;AAEJ,GA3CD;AA4CH,CA7CM","sourcesContent":["import {uiActions} from \"./ui-slice\";\r\nimport {cartActions} from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return async dispatch => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://react-http-a0360-default-rtdb.firebaseio.com/cart.json');\r\n            if(!response.ok) {\r\n                throw new Error('Could not fetch cart data!');\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        };\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity,\r\n            }));\r\n\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification(\r\n                {\r\n                    status: 'error',\r\n                    title: 'Error...',\r\n                    message: 'Fetching cart data failed!',\r\n                }))\r\n        }\r\n    };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            dispatch(uiActions.showNotification(\r\n                {\r\n                    status: 'pending',\r\n                    title: 'Sending...',\r\n                    message: 'Sending cart data!',\r\n                })\r\n            ));\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://react-http-a0360-default-rtdb.firebaseio.com/cart.json',\r\n                {method: 'PUT',\r\n                body: JSON.stringify({\r\n                    items: cart.items,\r\n                    totalQuantity: cart.totalQuantity,\r\n                }),\r\n            });\r\n            if(!response.ok) {\r\n                throw new Error('Sending cart data failed.');\r\n            }\r\n        };\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n\r\n            dispatch(uiActions.showNotification(\r\n                {\r\n                    status: 'success',\r\n                    title: 'Success...',\r\n                    message: 'Sent cart data successfully!',\r\n                })\r\n            );\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification(\r\n                {\r\n                    status: 'error',\r\n                    title: 'Error...',\r\n                    message: 'Sent cart data failed!',\r\n                }))\r\n        }\r\n\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}