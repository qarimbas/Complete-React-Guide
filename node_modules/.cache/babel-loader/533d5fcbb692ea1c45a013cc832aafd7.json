{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkurt\\\\Desktop\\\\projects\\\\react-complete-guide\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0gOgJILy4SAo8AFc6nXz38Q86n4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/components/SimpleInput.js"],"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","setFormIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","nameInputClasses","formSubmissionHandler","preventDefault","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;AACA,QAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,kBAAlD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,kBAAH,EAAuB;AACnBI,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEH,KAHD,MAGM;AACFA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAPQ,EAON,CAACJ,kBAAD,CAPM,CAAT;;AASA,QAAMK,sBAAsB,GAAGC,KAAK,IAAI;AACpCT,IAAAA,cAAc,CAAES,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAd;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAGH,KAAK,IAAI;AAClCP,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH,GAFD;;AAIA,QAAMW,gBAAgB,GAAGR,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;;AAEA,QAAMS,qBAAqB,GAAGL,KAAK,IAAI;AACnCA,IAAAA,KAAK,CAACM,cAAN;AAEAb,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAI,CAACC,kBAAL,EAAyB;AAErB;AAEH;;AAEDa,IAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAdD;;AAgBF,sBACE;AAAM,IAAA,QAAQ,EAAEY,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAED,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEL,sBAAvC;AAA+D,QAAA,MAAM,EAAEI;AAAvE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGKP,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAE,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvDD;;GAAMR,W;;KAAAA,W;AAyDN,eAAeA,WAAf","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst SimpleInput = (props) => {\n\n    const [enteredName, setEnteredName] = useState('');\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n    const enteredNameIsValid = enteredName.trim() !== '';\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    useEffect(() => {\n        if(enteredNameIsValid) {\n            setFormIsValid(true);\n\n        }else {\n            setFormIsValid(false);\n        }\n    }, [enteredNameIsValid]);\n\n    const nameInputChangeHandler = event => {\n        setEnteredName( event.target.value);\n    };\n\n    const nameInputBlurHandler = event => {\n        setEnteredNameTouched(true);\n    }\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n\n        setEnteredNameTouched(true);\n\n        if (!enteredNameIsValid) {\n\n            return;\n\n        }\n\n        console.log(enteredName);\n        setEnteredName('');\n        setEnteredNameTouched(false);\n    };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} />\n          {nameInputIsInvalid && <p className={\"error-text\"}>Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}