{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: 'authentication',\n  initialState: initialAuthState\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n/*\r\nconst counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n */","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/store/index.js"],"names":["configureStore","createSlice","initialCounterState","counter","showCounter","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","store","reducer","counterActions","actions"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,WAAxB,QAA0C,kBAA1C;AAEA,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE,IAA1B;AAAgCC,EAAAA,eAAe,EAAE;AAAjD,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEN,mBAFe;AAG7BO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACR,OAAN;AACH,KAHK;;AAINS,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACR,OAAN;AACH,KANK;;AAONU,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACR,OAAN,GAAgBQ,KAAK,CAACR,OAAN,GAAgBW,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMa,gBAAgB,GAAG;AACrBZ,EAAAA,eAAe,EAAE;AADI,CAAzB;AAIAJ,WAAW,CAAC;AACRM,EAAAA,IAAI,EAAE,gBADE;AAERC,EAAAA,YAAY,EAAES;AAFN,CAAD,CAAX;AAKA,MAAMC,KAAK,GAAGlB,cAAc,CAAC;AACzBmB,EAAAA,OAAO,EAAEb,YAAY,CAACa;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGd,YAAY,CAACe,OAApC;AACP,eAAeH,KAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {configureStore, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = {counter: 0, showCounter: true, isAuthenticated: false};\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n};\r\n\r\ncreateSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n\r\n\r\n/*\r\nconst counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n */"]},"metadata":{},"sourceType":"module"}