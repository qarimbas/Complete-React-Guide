{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\n\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(dispatch(uiActions.showNotification({\n      status: 'error',\n      title: 'Error...',\n      message: 'Sent cart data failed!'\n    })));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-a0360-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {}\n\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success...',\n      message: 'Sent cart data successfully!'\n    }));\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/store/cart-slice.js"],"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemToCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {uiActions} from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        totalAmount: 0,\r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            if(!existingItem) {\r\n                state.items.push({id: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name: newItem.title});\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemToCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            dispatch(uiActions.showNotification(\r\n                {\r\n                    status: 'error',\r\n                    title: 'Error...',\r\n                    message: 'Sent cart data failed!',\r\n                })\r\n            ));\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://react-http-a0360-default-rtdb.firebaseio.com/cart.json', {method: 'PUT',\r\n                body: JSON.stringify(cart),\r\n            });\r\n            if(!response.ok) {\r\n                throw new Error('Sending cart data failed.');\r\n            }\r\n        };\r\n\r\n       try {\r\n           await sendRequest();\r\n       } catch (error) {}\r\n\r\n        dispatch(uiActions.showNotification(\r\n            {\r\n                status: 'success',\r\n                title: 'Success...',\r\n                message: 'Sent cart data successfully!',\r\n            })\r\n        );\r\n    };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}