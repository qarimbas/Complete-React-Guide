{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkurt\\\\Desktop\\\\projects\\\\react-complete-guide\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"pukwRgl0663rrqxlfTpXf3a44UE=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/components/SimpleInput.js"],"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n    const { value: enteredName, isValid: enteredNameIsValid, hasError: nameInputHasError, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler, reset: resetNameInput\n\n    } = useInput(\n        value => value.trim() !== ''\n    );\n\n    const {value: enteredEmail, isValid: enteredEmailIsValid, hasError: emailInputHasError, valueChangeHandler: emailChangeHandler, inputBlurHandler: emailBlurHandler, reset: resetEmailInput\n    } = useInput(value => value.includes('@'));\n\n    let formIsValid = false;\n\n        if(enteredNameIsValid && enteredEmailIsValid) {\n            formIsValid = true;\n        }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n\n        if (!enteredNameIsValid) {\n            return;\n        }\n\n        console.log(enteredName);\n\n        resetNameInput();\n        resetEmailInput();\n    };\n\n    const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n    const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameChangeHandler} onBlur={nameBlurHandler} value={enteredName} />\n          {nameInputHasError && <p className={\"error-text\"}>Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} >Submit</button>\n      </div>\n        <div className={emailInputClasses}>\n            <label htmlFor='email'>Your E-mail</label>\n            <input type='email' id='email' onChange={emailChangeHandler} onBlur={emailBlurHandler} value={enteredEmail} />\n            {emailInputHasError && <p className={\"error-text\"}>Please enter a valid email.</p>}\n        </div>\n        <div className=\"form-actions\">\n            <button disabled={!formIsValid} >Submit</button>\n        </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}