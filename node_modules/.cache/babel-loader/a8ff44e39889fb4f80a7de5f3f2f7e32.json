{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkurt\\\\Desktop\\\\projects\\\\react-complete-guide\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    //const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  ;\n\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: [\" \", props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/components/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"mappings":"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","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    //const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n\n\n    const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {...existingItem, amount: existingItem.amount - 1};\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  \n  if(action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n      cartReducer,\n      defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: \"ADD\", item: item});\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };;\n  \n  const clearCartHandler = () => {\n      dispatchCartAction({type: 'CLEAR'});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n\n  return (\n      <CartContext.Provider value={cartContext}>\n        {\" \"}\n        {props.children}\n      </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}