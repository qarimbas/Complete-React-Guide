{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkurt\\\\Desktop\\\\projects\\\\react-complete-guide\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"+MyrWDEZZMtI4vHZcDFDHTEy5jc=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/kkurt/Desktop/projects/react-complete-guide/src/components/SimpleInput.js"],"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","enteredNameIsValid","nameInputChangeHandler","event","setEnteredName","target","emailInputChangeHandler","nameInputBlurHandler","setEnteredNameTouched","emailInputBlurHandler","nameInputClasses","nameInputIsInvalid","emailInputClasses","formSubmissionHandler","preventDefault","console","log"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n    const { value: enteredName, hasError: nameInputHasError, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler } = useInput(\n        value => value.trim() !== ''\n    );\n\n    const [enteredEmail, setEnteredEmail] = useState('');\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n    const enteredEmailIsValid = enteredEmail.includes('@');\n    const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n    let formIsValid = false;\n\n        if(enteredNameIsValid && enteredEmailIsValid) {\n            formIsValid = true;\n        }\n\n    const nameInputChangeHandler = event => {\n        setEnteredName( event.target.value);\n    };\n\n    const emailInputChangeHandler = event => {\n        setEnteredEmail( event.target.value);\n    };\n\n    const nameInputBlurHandler = event => {\n        setEnteredNameTouched(true);\n    }\n\n    const emailInputBlurHandler = event => {\n        setEnteredEmailTouched(true);\n    };\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n    const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n\n        setEnteredNameTouched(true);\n\n        if (!enteredNameIsValid) {\n\n            return;\n\n        }\n\n        console.log(enteredName);\n        setEnteredName('');\n        setEnteredNameTouched(false);\n\n        setEnteredEmail('');\n        setEnteredEmailTouched(false);\n    };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} value={enteredName} />\n          {nameInputIsInvalid && <p className={\"error-text\"}>Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} >Submit</button>\n      </div>\n        <div className={emailInputClasses}>\n            <label htmlFor='email'>Your E-mail</label>\n            <input type='email' id='email' onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} value={enteredEmail} />\n            {nameInputIsInvalid && <p className={\"error-text\"}>Please enter a valid email.</p>}\n        </div>\n        <div className=\"form-actions\">\n            <button disabled={!formIsValid} >Submit</button>\n        </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}